pipeline{
    agent any //defining agent

    stages{
	
	    stage('app-code'){
            steps{
                
                dir('app-code') {
                     git url: "https://github.com/Aniket-d-d/TWSThreeTierAppChallenge.git", branch: "ak-automate" //clone-the app-code
                }
            }
        }
    
		stage('update-files'){
		    environment {
                AWS_CREDS = credentials('aws-cli-cred')   //docker-credentials
                MONGO_CRED = credentials('mongo-pass')
            }
            steps{
                 dir('app-code') {
                    sh "cd /TWSThreeTierAppChallenge/k8s_manifests/mongo"
                    sh '''
                    sed -i 's/USR_NAME/'"$MONGO_CRED_USR"'/g' secrets.yaml
                    sed -i 's/PASS/'"$MONGO_CRED_PSW"'/g' secrets.yaml
                    '''
				}
            }
        }


		stage('deploy-app'){
		    environment {
                AWS_CREDS = credentials('aws-cli-cred')   //docker-credentials
            }
            steps{
                 
                 dir('app-code') {
			     sh "cd TWSThreeTierAppChallenge/k8s_manifests"
				 sh "cd mongo"
                 sh "kubectl apply -f ."
                 sh "cd .."
                 sh "kubectl apply -f backend-deployment.yaml backend-service.yaml frontend-deployment.yaml frontend-service.yaml "
				}
            }
        }

        stage('install-alb'){
		    environment {
                AWS_CREDS = credentials('aws-cli-cred')   //docker-credentials
            }
            steps{
                 
                 dir('alb-code') {
			     sh "curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json"
                 sh "aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json"
                 sh "eksctl utils associate-iam-oidc-provider --region=us-west-2 --cluster=three-tier-cluster --approve"
                 sh "eksctl create iamserviceaccount --cluster=three-tier-cluster --namespace=kube-system --name=aws-load-balancer-controller --role-name AmazonEKSLoadBalancerControllerRole --attach-policy-arn=arn:aws:iam::ACCOUNT_ID:policy/AWSLoadBalancerControllerIAMPolicy --approve --region=us-west-2"
				}
            }
        }

        stage('deploy-alb'){
		    environment {
                AWS_CREDS = credentials('aws-cli-cred')   //docker-credentials
            }
            steps{
                 
                 dir('app-code') {
			     sh "sudo snap install helm --classic"
                 sh "helm repo add eks https://aws.github.io/eks-charts"
                 sh "helm repo update eks"
                 sh "helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=three-tier-cluster --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller"
                 sh "kubectl get deployment -n kube-system aws-load-balancer-controller"
                 sh "kubectl apply -f full_stack_lb.yaml"
				}
            }
        }
        
    }
}